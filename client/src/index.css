@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  /* Custom shimmer animation for loading states */
  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  
  .animate-shimmer {
    animation: shimmer 2s ease-in-out infinite;
  }
  
  /* Enhanced bounce animation for new rows */
  @keyframes gentle-bounce {
    0%, 20%, 53%, 80%, 100% {
      transform: translate3d(0, 0, 0);
    }
    40%, 43% {
      transform: translate3d(0, -5px, 0);
    }
    70% {
      transform: translate3d(0, -3px, 0);
    }
    90% {
      transform: translate3d(0, -1px, 0);
    }
  }
  
  .animate-gentle-bounce {
    animation: gentle-bounce 1s ease-in-out;
  }
  
  /* Smooth scale animation for interactive elements */
  @keyframes pulse-scale {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.02);
    }
  }
  
  .animate-pulse-scale {
    animation: pulse-scale 2s ease-in-out infinite;
  }
  
  /* Gradient background animation */
  @keyframes gradient-shift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
  
  /* RTL language support */
  body.rtl {
    direction: rtl;
    text-align: right;
  }
  
  /* RTL for HTML element */
  html[dir="rtl"] {
    direction: rtl;
    text-align: right;
  }
  
  /* Flip icons and other direction-dependent elements in RTL mode */
  body.rtl .material-icons.flip-in-rtl,
  html[dir="rtl"] .material-icons.flip-in-rtl {
    transform: scaleX(-1);
  }
  
  /* Adjust padding/margin for RTL */
  body.rtl .rtl-swap-padding,
  html[dir="rtl"] .rtl-swap-padding {
    @apply pl-0 pr-4;
  }
  
  body:not(.rtl) .rtl-swap-padding,
  html:not([dir="rtl"]) .rtl-swap-padding {
    @apply pr-0 pl-4;
  }
  
  /* Adjust margins for RTL */
  body.rtl .rtl-swap-margin,
  html[dir="rtl"] .rtl-swap-margin {
    @apply ml-0 mr-4;
  }
  
  body:not(.rtl) .rtl-swap-margin,
  html:not([dir="rtl"]) .rtl-swap-margin {
    @apply mr-0 ml-4;
  }
  
  /* RTL utility classes */
  .rtl\:flex-row-reverse {
    @apply flex-row-reverse;
  }
  
  /* General RTL/LTR classes */
  .rtl {
    direction: rtl;
    text-align: right;
  }
  
  .ltr {
    direction: ltr;
    text-align: left;
  }
  
  .flip-in-rtl {
    transform: scaleX(-1);
  }
  
  /* Print specific styles */
  @media print {
    /* Hide everything except the printable content */
    body * {
      visibility: hidden;
    }
    
    /* Only show the print area */
    .print\:block,
    .print\:block * {
      visibility: visible !important;
    }
    
    /* Set the print dimensions and page break behavior */
    .printable-label {
      position: absolute;
      left: 0;
      top: 0;
      width: 4in !important;
      height: 6in !important;
      page-break-after: always;
      margin: 0 !important;
      padding: 0.25in !important;
      box-sizing: border-box;
      background-color: white !important;
      color: black !important;
    }
    
    /* Hide scrollbars and other UI elements */
    html, body {
      overflow: hidden !important;
      background-color: white !important;
      width: 4in !important;
      height: 6in !important;
      margin: 0 !important;
      padding: 0 !important;
    }
  }
}